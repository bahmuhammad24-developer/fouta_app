name: Firebase Deploy (rules, indexes, functions)
# ------------------------------------------------------------------------------
# Read first: docs/firebase-deploy-journey.md (full fixes & IAM roles)
# Also: docs/ci-auth.md (ADC policy), docs/ai-collaboration.md (AI rules)
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# CI Auth Policy:
# - Use Google ADC via google-github-actions/auth@v2 (Workload Identity or SA JSON)
# - Do NOT use Firebase CLI tokens; do NOT pass --token
# - Functions deploys require iam.serviceAccountUser on the runtime SA
# ------------------------------------------------------------------------------

on:
  push:
    branches: [ dev ]
    paths:
      - "firestore.rules"
      - "firestore.indexes.json"
      - "storage.rules"
      - "firebase.json"
      - ".firebaserc"
      - "functions/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required by google-github-actions/auth

    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Firebase CLI (pin)
        run: npm i -g firebase-tools@14.10.1

      # Auth to Google using the service account JSON in FIREBASE_SERVICE_ACCOUNT
      - name: Authenticate to Google Cloud (workload identity)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          create_credentials_file: true

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Print Firebase CLI version
        run: firebase --version

      - name: Validate Firestore indexes schema
        run: npm run check:indexes

      - name: Validate rules + indexes (best-effort)
        run: |
          firebase emulators:exec \
            --project "$FIREBASE_PROJECT_ID" \
            --only firestore \
            "echo OK" || true

      - name: Deploy Firestore/Storage rules
        run: |
          firebase deploy --non-interactive \
            --project "$FIREBASE_PROJECT_ID" \
            --only firestore:rules,storage \
            --force

      - name: Deploy Firestore indexes (ignore 409 already-exists)
        shell: bash
        run: |
          set -o pipefail
          LOG=$(mktemp)
          if firebase deploy --only firestore:indexes --non-interactive \
              --project "$FIREBASE_PROJECT_ID" \
              --force 2>&1 | tee "$LOG"; then
            echo "Indexes deployed."
          else
            if grep -qiE "409.*index already exists|ALREADY_EXISTS|already exists" "$LOG"; then
              echo "Indexes already exist; treating as success."
            else
              echo "Deploy failed for a reason other than 409:"
              cat "$LOG"
              exit 1
            fi
          fi

      - name: Compute functions package hash
        if: ${{ hashFiles('functions/package.json') != '' }}
        run: echo "FN_HASH=$(sha256sum functions/package.json | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Cache functions node_modules
        if: ${{ hashFiles('functions/package.json') != '' }}
        uses: actions/cache@v4
        with:
          path: functions/node_modules
          key: functions-${{ env.FN_HASH }}

      - name: Deploy functions (if present)
        if: ${{ env.FN_HASH != '' }}
        env:
          FIREBASE_PROJECT_ID: ${{ env.FIREBASE_PROJECT_ID }}
        run: |
          set -euo pipefail
          if git diff --quiet HEAD~1 -- functions/; then
            echo "No changes in functions; skipping deploy."
            exit 0
          fi

          echo "ðŸ”§ Preparing Cloud Functions (prod deps only)â€¦"
          cd functions
          npm install --omit=dev --no-audit --no-fund
          cd ..

          echo "ðŸš€ Deploying functionsâ€¦"
          firebase deploy --non-interactive \
            --project "$FIREBASE_PROJECT_ID" \
            --only functions

