name: Firebase Deploy (rules, indexes, functions)

on:
  push:
    branches: [ dev ]
    paths:
      - "firestore.rules"
      - "firestore.indexes.json"
      - "storage.rules"
      - "firebase.json"
      - ".firebaserc"
      - "functions/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required by google-github-actions/auth

    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      # Auth to Google using the service account JSON in FIREBASE_SERVICE_ACCOUNT
      - name: Authenticate to Google Cloud (workload identity)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Mint access token for Firebase CLI
        id: token
        run: |
          echo "token=$(gcloud auth print-access-token)" >> $GITHUB_OUTPUT

      - name: Print Firebase CLI version
        run: firebase --version

      - name: Validate Firestore indexes schema
        run: npm run check:indexes

      - name: Validate rules + indexes (best-effort)
        run: |
          firebase emulators:exec \
            --project "$FIREBASE_PROJECT_ID" \
            --only firestore \
            --token "${{ steps.token.outputs.token }}" \
            "echo OK" || true

      - name: Deploy rules & indexes
        run: |
          firebase deploy --non-interactive \
            --project "$FIREBASE_PROJECT_ID" \
            --only firestore:rules,firestore:indexes,storage \
            --token "${{ steps.token.outputs.token }}"

      - name: Deploy functions (if present)
        run: |
          if [ -d "functions" ] && [ -f "functions/package.json" ]; then
            npm --prefix functions ci
            firebase deploy --non-interactive \
              --project "$FIREBASE_PROJECT_ID" \
              --only functions \
              --token "${{ steps.token.outputs.token }}"
          else
            echo "No functions dir; skipping"
          fi

